@{
    ViewBag.Title = "Home Page";
}
@model StudentSystem.Models.Students
<script type="text/javascript">
    function ModifyCheckBoxes(Id) {
        var ids = 'Educations_' + Id + '__Checked';
        for (var i = 0; i < 4; i++) {
            if (ids != 'Educations_' + i + '__Checked')
                document.getElementById('Educations_' + i + '__Checked').checked = false;
        }
    };
</script>
<script type="text/javascript" src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script type="text/javascript">
    $(function () {
        $("#btnPost").click(function () {
            var student = new Object();
            student.Name = $('#Name').val();
            student.Age = $('#Age').val();
            student.Gender = $('#Gender').val();
            student.City = $("#City option:selected").text();
            debugger;
            for (var i = 0; i < 4; i++) {

                if ($('#' + 'Educations_' + i + '__Checked').is(":checked")) {
                    student.EducationId = i;
                    $("#EducationId").val(i);
                }

            }

            if (student != null) {
                $.ajax({
                    type: "POST",
                    url: "/Home/AjaxPostCall",
                    data: JSON.stringify(student),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response != null) {
                            alert("saved");
                        } else {
                            alert("Something went wrong");
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }
        });
    });
</script>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <br />
        <br />
        <h4>Registration Form</h4>
        <table style="width:100%; background-color:darkseagreen; border:5px solid black">
            <tr>
                <td>
                    @Html.LabelFor(model => model.Name, htmlAttributes: new
             {
                 @class = "control-label col-md-2"
             })
                </td>
                <td>
                    @Html.TextBoxFor(model => model.Name, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control"
                       }
                   })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Name, "", new
                  {
                          @class = "text-danger"
                      })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.Age, htmlAttributes: new
             {
                 @class = "control-label col-md-2"
             })
                </td>


                <td>
                    @Html.EditorFor(model => model.Age, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control"
                       }
                   })
                </td>

                <td>
                    @Html.ValidationMessageFor(model => model.Age, "", new
                  {
                          @class = "text-danger"
                      })
                </td>

            </tr>

            <tr>
            <td>
                @Html.LabelFor(model => model.Gender, htmlAttributes: new
                {
                    @class = "control-label col-md-2"
                })
            </td>

            <td>

                Male:   @Html.RadioButton("Gender", "Male")
                Female: @Html.RadioButton("Gender", "Female")
            </td>

            <td>
                @Html.ValidationMessageFor(model => model.Gender, "", new
                {
                        @class = "text-danger"
                    })
            </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.City, htmlAttributes: new
                    {
                        @class = "control-label col-md-2"
                    })
                </td>
                <td>
                    @Html.DropDownListFor(M => M.City, new SelectList(Model.Cities, "Value", "Text"))
                </td>
                <td>

                    @Html.ValidationMessageFor(model => model.City, "", new
                    {
                            @class = "text-danger"
                        })
                </td>
            </tr>


            <tr>
                <td>
                    @Html.LabelFor(model => model.Education, htmlAttributes: new
                    {
                        @class = "control-label col-md-2"
                    })
                </td>
                <td>
                    @for (var i = 0; i < Model.Educations.Count(); i++)
                    {
                        <table>
                            <tr>
                                <td>
                                    @Html.HiddenFor(it => Model.Educations[i].Id)
                                    @Html.DisplayFor(it => Model.Educations[i].Name)
                                </td>
                                <td>
                                    @Html.CheckBoxFor(it => Model.Educations[i].Checked, new { Style = "vertical-align:3px}", onchange = "ModifyCheckBoxes(" + i + ")" })
                                </td>
                            </tr>
                        </table>

                    }
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.Education, "", new
                    {
                            @class = "text-danger"
                        })
                </td>
            </tr>
        </table>


        @Html.HiddenFor(m => m.EducationId)
        @Html.ValidationSummary(true, "", new
        {
            @class = "text-danger"
        })


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <input type="button" id="btnPost" value="Post Data" />
            </div>
        </div>

    }
</body>
